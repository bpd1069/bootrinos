# this goes into /etc/local.d on an Alpine Linux machine and will be run on boot
# http://tecadmin.net/startup-shutdown-script-on-gentoo
# the Alpine Linux must have had the following command run:
# rc-update add local default
# the above command ensures this script is run at startup
# Alpine Linux config lbu package bootrino. must be run of course to retain this setting
# lbu package bootrino.apkvol.tar.gz
# the package file must be included in the Alpine grub boot config


# SET THE BOOTRINO ENVIRONMENT VARIABLES
# envvars.sh is generated by bootrino and passed through all boot processes
source /bootrino/envvars.sh


# CREATE BASIC NETWORK INTERFACES FILE, OVERWRITE LATER IF MORE SPECIFIC AVAILABLE
echo auto lo > /etc/network/interfaces
echo iface lo inet loopback >> /etc/network/interfaces
echo auto eth0 >> /etc/network/interfaces
echo iface eth0 inet dhcp >> /etc/network/interfaces

echo nameserver 8.8.8.8 > /etc/resolv.conf
echo nameserver 8.8.4.4 >> /etc/resolv.conf

wget http://www.supercoders.com.au/floob
curl http://www.supercoders.com.au/floob1

if [ ${BOOTRINO_CLOUD_TYPE} == "googlecomputeengine" ]; then
  echo Configure googlecomputeengine....
  DISK_DEVICE_NAME="sda"
  ifconfig eth0 mtu 1460
fi;

if [ ${BOOTRINO_CLOUD_TYPE} == "amazonwebservices" ]; then
  echo Configure amazonwebservices....
  DISK_DEVICE_NAME="xvda"
  #ifconfig eth0 up
  #/sbin/udhcpc -i eth0 -s /usr/share/udhcpc/default.script
  #/etc/init.d/networking restart
fi;

if [ ${BOOTRINO_CLOUD_TYPE} == "digitalocean" ]; then
  echo Configure digitalocean....
  DISK_DEVICE_NAME="vda"
  cp /media/${DISK_DEVICE_NAME}1/bootrino/interfaces /etc/network/interfaces
  ifup eth0
fi;

if [ ${BOOTRINO_CLOUD_TYPE} == "rackspace" ]; then
  echo Configure rackspace....
  DISK_DEVICE_NAME="xvda"
  cp /media/${DISK_DEVICE_NAME}1/bootrino/interfaces /etc/network/interfaces
  ifup eth0
fi;

if [ ${BOOTRINO_CLOUD_TYPE} == "softlayer" ]; then
  echo Configure softlayer....
  DISK_DEVICE_NAME="xvda"
  cp /media/${DISK_DEVICE_NAME}1/bootrino/interfaces /etc/network/interfaces
  ifup eth0
fi;

echo bootrino canonical URL: ${BOOTRINO_URL_BASE}
echo cloud type: ${BOOTRINO_CLOUD_TYPE}
echo disk device name: ${DISK_DEVICE_NAME}

ifconfig -a > /dev/console
route -n > /dev/console


apk add openssh
rc-update add sshd default
cp /media/${DISK_DEVICE_NAME}1/bootrino/sshd_config /etc/ssh/sshd_config
/etc/init.d/sshd restart

